---
// imports
import "../../sass/main.scss";
import BaseLayout from "../../layout/BaseLayout.astro";
import Button from "../../components/ui/Button.astro";
import Link from "../../components/ui/Link.astro";
import { formatList } from "astro/runtime/server/render/util.js";

// Functions
const formatPopulationNumber = (number) => {
  return new Intl.NumberFormat("de-DE").format(number);
};

// Generate route dynamic (/country/page)
const { page } = Astro.params;

// Data fetching
const response = await fetch(`https://restcountries.com/v3.1/alpha/${page}`);
const data = await response.json();
const country = data[0];

// border countries
const fetchAllCountries = await fetch("https://restcountries.com/v3.1/all");
const allCountries = await fetchAllCountries.json();

const borderCountries = allCountries.filter((c) =>
  country.borders?.includes(c.cca3)
);
---

<BaseLayout title={country.name.common + " - Details"}>
  <div class="container pb-500">
    <Button id="button-back" className="has-icon" style="muted">
      <svg
        fill="currentColor"
        viewBox="0 0 96 96"
        xmlns="http://www.w3.org/2000/svg"
        ><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g
          id="SVGRepo_tracerCarrier"
          stroke-linecap="round"
          stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"
          ><title></title><path
            d="M39.3756,48.0022l30.47-25.39a6.0035,6.0035,0,0,0-7.6878-9.223L26.1563,43.3906a6.0092,6.0092,0,0,0,0,9.2231L62.1578,82.615a6.0035,6.0035,0,0,0,7.6878-9.2231Z"
          ></path></g
        ></svg
      >
      <span>Back</span>
    </Button>
  </div>

  <section
    aria-label=`Informations about ${country.name.common}`
    class="container pb-500"
  >
    <div class="country__wrapper even-columns pb-500">
      <div>
        <img src={country.flags.svg} alt={country.flags.alt} />
      </div>
      <div>
        <h2 class="heading-2">{country.name.common}</h2>
        <div class="even-columns pb-500">
          <div>
            <p>
              <span class="fs-500 fw-600">Native Name/s:&nbsp;</span>
              <span class="fs-500 txt-neutral-800 value-text"
                >{
                  formatList(
                    Object.values(country.name.nativeName).map(
                      (name) => name.common
                    )
                  )
                }</span
              >
            </p>
            <p>
              <span class="fs-500 fw-600">Population:&nbsp;</span>
              <span class="fs-500 txt-neutral-800 value-text"
                >{formatPopulationNumber(country.population)}</span
              >
            </p>
            <p>
              <span class="fs-500 fw-600">Region:&nbsp;</span>
              <span class="fs-500 txt-neutral-800 value-text"
                >{country.region}</span
              >
            </p>
            <p>
              <span class="fs-500 fw-600">Sub Region:&nbsp;</span>
              <span class="fs-500 txt-neutral-800 value-text"
                >{country.subregion}</span
              >
            </p>
            <p>
              <span class="fs-500 fw-600">Capital:&nbsp;</span>
              <span class="fs-500 txt-neutral-800 value-text"
                >{formatList(Object.values(country.capital))}</span
              >
            </p>
          </div>
          <div>
            <p>
              <span class="fs-500 fw-600">Top Level Domain:&nbsp;</span>
              <span class="fs-500 txt-neutral-800 value-text"
                >{country.tld[0]}</span
              >
            </p>
            <p>
              <span class="fs-500 fw-600">Currencies:&nbsp;</span>
              <span class="fs-500 txt-neutral-800 value-text"
                >{
                  formatList(
                    Object.values(country.currencies).map((curr) => curr.name)
                  )
                }</span
              >
            </p>
            <p>
              <span class="fs-500 fw-600">Languages:&nbsp;</span>
              <span class="fs-500 txt-neutral-800 value-text"
                >{formatList(Object.values(country.languages))}</span
              >
            </p>
          </div>
        </div>
        <div class="borders">
          <p class="fs-500 fw-500">Border Countries:&nbsp;</p>
          <ul>
            {
              borderCountries.map((c) => (
                <li>
                  <Link
                    style="muted"
                    href={`/country/${c.cca3}`}
                    className="fs-300"
                  >
                    {c.name.common}
                  </Link>
                </li>
              ))
            }
          </ul>
        </div>
      </div>
    </div>
  </section>
</BaseLayout>

<script>
  const buttonBack = document.getElementById("button-back");

  buttonBack.addEventListener("click", () => {
    window.history.back();
  });
</script>
